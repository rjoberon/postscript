%!PS-Adobe-3.0

%
% Fills the page with squares of random color.
%
%
% Changelog:
% 2025-01-03 (rja):
% - cleanups and addition of random seed
% 2018-09-16 (rja):
% - initial version
%

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% initialisation
42 srand

% set page size to A4 landscape
<< /PageSize [595 842] >> setpagedevice

% define unit to be 1cm ((72 dots/inch) / (2.54 cm/inch))
/unit 72 2.54 div def
/squaresize 1 def

unit unit scale
0 setlinewidth
0 0 translate

% max drawing size
/hmax 21 def % horizontally
/vmax 30 def % vertically
% color properties
/csummin 1.0 def % r+g+b must be larger than this
/cpwdist 0.3 def % |r-g| or |g-b| or |b-r| must be larger than this

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% functions

% draw a square of size a at the current position
/square {                % a
    1 dict begin
    /a exch def
    %    newpath
    a 0 rmoveto
    0 a neg rlineto
    a neg 0 rlineto
    0 a rlineto
    closepath
    fill
    end
} def

/getrandseed {
    (%Calendar%) /IODevice resourcestatus {
        pop pop (%Calendar%) currentdevparams
        /Running get {
            0            % sum
            [/Second /Minute /Hour /Day /Month /Year /Weekday]
            {            % key
                (%Calendar%) currentdevparams
                exch get % sum val
                add      % sum
            } forall
                         % S+M+H+D+M+Y+W
            % do [n+1] = (16807 * x[n]) mod (2^31 - 1)
            16807 mul
            2147483647 mod
        } {
            (clock/calendar is present but not running.\n) show
        } ifelse
    } {
        (no clock/calendar present.\n) show
    } ifelse
} def

% a random number between 0 and 1
/rfloat {
    rand 16#7fffffff div
} def

% get a random color
/rcolor {                % --> r g b (each a random value between 0 and 1)
    1 dict begin
    {
        /r rfloat def
        /g rfloat def
        /b rfloat def
        % compare sum
        r g b add add
        % larger than csummin
        csummin gt
        % one of the pair-wise distances large enough
        r g sub abs cpwdist gt
        g b sub abs cpwdist gt or
        b r sub abs cpwdist gt or
        and {exit} if
    } loop
    r g b
    end
} def

getrandseed srand        % initialize PRNG

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% main program
0 squaresize hmax {      % horizontal loop
    0 squaresize vmax {  % vertical loop
        1 index exch     % x x y
        moveto
        rcolor setrgbcolor
        squaresize square
    } for
    pop
} for
showpage
